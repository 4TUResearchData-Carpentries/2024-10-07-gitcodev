
clear
cd ~/Desktop
ls
mkdir -p 2024-gitcodev/git
cd 2024-gitcodev/
cd git
ls
echo $SHELL
git
git --version
git version
git -v
git help
clear
git help help
git config
git config --list
git config --global core.editor nano
git config --global core.autocrlf false
git help glossary
clear
pwd
ls
echo 'first line'
echo 'first line' > lines.txt
ls
cat lines.txt 
echo 'second line'
echo 'second line' >> lines.txt 
cat lines.txt 
git status
git init
ls
ls -a
ls -aF
ls -aF .git/
git status
git add lines.txt
git status
ls -a .git
git diff lines.txt
echo 'third line' >> lines.txt 
cat lines.txt 
git diff lines.txt
git status
git add lines.txt 
git status
git diff lines.txt
ls
echo 'fourth line' >> lines.txt 
git status
git diff lines.txt
git status
git add lines.txt 
git status
git diff lines.txt
clear
# Working with directories
pwd
ls
mkdir directory
ls
git status
touch directory/emptyfile
ls -R
git status
git status -u
git add directory
git status
history
history 20
history 20 > history.log
ls
cat history.log 
git status
echo '*.log'
echo '*.log' > .gitignore
ls
ls -a
git status
git add .gitignore 
git status
echo 'lines.txt' >> .gitignore 
cat .gitignore 
git status
git add .gitignore 
git status
# Next few commands are not core part of the course
echo 'new file' > new.txt
echo 'new.txt' >> .gitignore 
git status
git add new.txt
# End of experiment
which more
more
cat lines.txt | more
cat lines.txt | less
git config --list
clear
touch directory/trackme.txt
touch directory/donttrackme
ls directory/
mv directory/donttrackme donttrackme.txt
git status
mv donttrackme.txt directory/
ls
ls directory/
git status
echo 'directory' >> .gitignore 
cat .gitignore 
git status
echo '!directory' >> .gitignore 
git status
cat .gitignore
echo 'directory' >> .gitignore 
cat .gitignore
git status
git help gitignore
git add .gitignore
git status
git rm directory/emptyfile 
git rm --cached directory/emptyfile
git status
